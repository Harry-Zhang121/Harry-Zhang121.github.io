<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Notes for Jerry</title>
    <link href="/2020/03/09/Notes-for-Jerry/"/>
    <url>/2020/03/09/Notes-for-Jerry/</url>
    
    <content type="html"><![CDATA[<h1 id="一个简单的网页已经搭建完了"><a href="#一个简单的网页已经搭建完了" class="headerlink" title="一个简单的网页已经搭建完了"></a>一个简单的网页已经搭建完了</h1><p>这是一个博客，使用的框架叫做<a href="https://hexo.io" target="_blank" rel="noopener">Hexo</a>，是一个台湾人开发的博客框架。部署十分简单，几行代码就可以部署到github。</p><h2 id="所以咱咋往上写东西呀"><a href="#所以咱咋往上写东西呀" class="headerlink" title="所以咱咋往上写东西呀"></a>所以咱咋往上写东西呀</h2><p>我已经把你加到github协作者里了，理论上来说你需要安装Hexo并且克隆github仓库之后就可以开始写东西了。</p><h3 id="你需要安装的"><a href="#你需要安装的" class="headerlink" title="你需要安装的"></a>你需要安装的</h3><ol><li>Node.js</li><li>npm</li><li>Hexo</li><li>Git</li><li>Markdown(并不需要安装，它只是一个写作格式。)<br>由于博客是markdown文档，所以你需要知道一点markdown语法。<a href="https://www.jianshu.com/p/191d1e21f7ed" target="_blank" rel="noopener">语法简介</a><br>一个好用的在线markdown编辑器<a href="https://stackedit.io" target="_blank" rel="noopener">stackedit</a></li></ol><h2 id="接下来还能干点啥？"><a href="#接下来还能干点啥？" class="headerlink" title="接下来还能干点啥？"></a>接下来还能干点啥？</h2><ul><li>等你域名审核完改一下域名解析这个网站就可以从域名访问了。</li><li>主题可以改，比如<a href="https://github.com/fluid-dev/hexo-theme-fluid" target="_blank" rel="noopener">这个</a></li><li>现在所有文章都堆在一页，hexo是可以添加多个页面的但是我还没搞懂。</li><li>还可以在网页里插入网易云播放器。</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Here is my C++ notes. As a test for markdown randering.</title>
    <link href="/2020/03/09/Here-is-a-test-This-is-the-firs-string-on-the-blog/"/>
    <url>/2020/03/09/Here-is-a-test-This-is-the-firs-string-on-the-blog/</url>
    
    <content type="html"><![CDATA[<h1 id="02-11-first-class"><a href="#02-11-first-class" class="headerlink" title="02-11 first class"></a>02-11 first class</h1><h2 id="contect-info"><a href="#contect-info" class="headerlink" title="contect info"></a>contect info</h2><p>Dr. Dmitriy Dunaev<br><a href="mailto:dunaev@aut.bme.hu">dunaev@aut.bme.hu</a><br>QB224<br>for informations: <a href="http://www.aut.bme.hu/Course/bop2" target="_blank" rel="noopener">www.aut.bme.hu/Course/bop2</a><br>use eduID to login.</p><h2 id="course-requirement"><a href="#course-requirement" class="headerlink" title="course requirement"></a>course requirement</h2><p>entry test (5min) before every lab<br>5 control tests (15min) during lab<br>2 Midterms</p><h2 id="What-is-inside-the-compiler"><a href="#What-is-inside-the-compiler" class="headerlink" title="What is inside the compiler?"></a>What is inside the compiler?</h2><p>soource code -&gt; preprocessor -&gt; compiler -&gt; Linker -&gt; exe</p><h3 id="preprocessor"><a href="#preprocessor" class="headerlink" title="preprocessor"></a>preprocessor</h3><ol><li>copy the header, replace the constent.</li><li>delete comments.</li></ol><h3 id="compiler"><a href="#compiler" class="headerlink" title="compiler"></a>compiler</h3><ol><li>check errors.</li><li>compiling to object code.</li></ol><h3 id="Linker"><a href="#Linker" class="headerlink" title="Linker"></a>Linker</h3><p>combine all object files and DLL(Dynamic linked library)</p><h2 id="Difference"><a href="#Difference" class="headerlink" title="Difference"></a>Difference</h2><p>pass arguments<br>C:by value, by address<br>CPP: one more that C — By reference </p><pre><code class="CPP">int x;int* px= &amp;x;int&amp; y=x; // y becomes an aliase of x. y is called reference variable.</code></pre><pre><code class="CPP">int&amp; func(int x, int&amp; v){    int a=10;    return a;    // or    x++;    return x;    // or    v++;    return v;}int main(){    int a,b = 1. c = 0;    a = func(1,2); // bab, 2 is not a variable.    a = func(b,c);    a = func(1,c);    return 0:}</code></pre><p><em>Rule!! Do not return reference to local variable or parameter</em></p><h2 id="diference-between-reference-and-pointer"><a href="#diference-between-reference-and-pointer" class="headerlink" title="diference between reference and pointer"></a>diference between reference and pointer</h2><ol><li>pointer can be declear but not defined. reference can not be decleared only.</li></ol><h2 id="What-define-the-function"><a href="#What-define-the-function" class="headerlink" title="What define the function"></a>What define the function</h2><ul><li>in C only the name define the function</li><li>in CPP name and parameter list</li></ul><h2 id="defualt-arguments"><a href="#defualt-arguments" class="headerlink" title="defualt arguments"></a>defualt arguments</h2><pre><code class="cpp">int F(int x, int y=10, double z=3.33){ /*sth sth*/}</code></pre><p>If we don’t pass any value to y and z they will be 10 and 3.33 by defult.</p><h2 id="constent-in-parameter"><a href="#constent-in-parameter" class="headerlink" title="constent in parameter"></a>constent in parameter</h2><pre><code class="cpp">function(const int input, double input2)</code></pre><h2 id="in-line-functions"><a href="#in-line-functions" class="headerlink" title="in line functions?"></a>in line functions?</h2><h2 id="Object-ori-programming-OOP"><a href="#Object-ori-programming-OOP" class="headerlink" title="Object ori. programming OOP"></a>Object ori. programming OOP</h2><h3 id="Concepts"><a href="#Concepts" class="headerlink" title="Concepts:"></a>Concepts:</h3><ol><li><p>encapsulation</p></li><li><p>data hiding (information hiding)</p></li><li><p>inheritance -&gt; polymorphism</p><h3 id="class"><a href="#class" class="headerlink" title="class"></a>class</h3><p>A class is a user-defined data type, which defines:</p></li><li><p>data and operations (structers only store data in standered C)</p></li><li></li><li><p>instantiate/release</p></li><li><p>How to excute the operations</p><h4 id="example"><a href="#example" class="headerlink" title="example"></a>example</h4><p>to draw a white pixel on the screen</p><pre><code class="C">//In standered Cstruct point{ int x; int y;}void draw (struct point p){  //.....}int main(){  sturct point A;  struct A.x = 20; struct A.y = 70;  draw(A;)}</code></pre><pre><code class="CPP">//In CPPclass point{ public:     int x;                 // ATTRIBUTES     int y;                // ATTRIBUTES void draw(...){...}     //Methods // Let&#39;s write a function to reset x coordnite void setx(int new_x) {     x = new_x; }};int main(){  point A();  A.x = 20; A.y = 70;  A.draw();}</code></pre><h3 id="writeing-class-methods"><a href="#writeing-class-methods" class="headerlink" title="writeing class methods"></a>writeing class methods</h3><ol><li>Inline</li><li>Separately (code + header)<pre><code class="cpp">// header A.hclass A{public:int x;void setx (int new_x);</code></pre></li></ol><p>};</p><pre><code>```cppinclude &quot;A.h&quot; void A::setx(int new_x) {     x = new_x; }</code></pre></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>test</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/03/09/hello-world/"/>
    <url>/2020/03/09/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
